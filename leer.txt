- Abrir la consola en la carpeta del proyecto
- En CMD o PowerShell:

cd C:\sistemaRomina

- Inicializar el repositorio local

git init

- (Opcional pero recomendado) Ignorar archivos innecesarios
Crea un archivo .gitignore para no subir node_modules, .env, etc.:
echo node_modules/ > .gitignore
echo .env >> .gitignore

Agregar todos los archivos al seguimiento de Git
git add .

El punto (.) significa “agregar todos los archivos y carpetas” que no estén en .gitignore.

Crear el primer commit

git commit -m "Versión inicial del proyecto"

Vincular el repositorio local con el remoto en GitHub

git branch -M master
git remote add origin https://github.com/polielb/atenciones.git

Paso 1: Generar clave SSH
ssh-keygen -t ed25519 -C "tu-email@example.com"

Paso 2: Agregar la clave a GitHub
Copia la clave pública:

cat ~/.ssh/id_ed25519.pub

Ve a GitHub → Settings → SSH and GPG keys → New SSH key
Pega la clave pública

Paso 3: Cambiar la URL del repositorio

git remote set-url origin git@github.com:polielb/atenciones.git

git push -u origin master





http://localhost/backend/api/verify_reset_token.php?token=cc139d446242fdff271e93848f810c60ec529d31f1d40149f0cf1ccf50005311

http://localhost/backend/api/verify_reset_token.php?token=
http://192.168.16.20/backend/api/verify_reset_token.php?token=


http://192.168.16.20/backend/api/verify_reset_token.php?token=5bfbccc7649ddb2b7a96778adc96401639c1a0bca666e6b737fff0eed645c328




5. Opcional: Limpieza automática
Crear: backend/api/cleanup_sessions.php (Artefacto #10)

Script para limpiar sesiones expiradas automáticamente

6. Configurar cron job (opcional)
Para limpiar sesiones expiradas automáticamente cada hora:
bash# Agregar a crontab
0 * * * * cd /path/to/backend && php api/cleanup_sessions.php